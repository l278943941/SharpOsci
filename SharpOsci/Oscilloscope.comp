#version 450
#extension GL_EXT_nonuniform_qualifier : enable

layout(local_size_x = 8, local_size_y = 8,local_size_z = 1) in;

layout(binding = 0) uniform buffer  GlobalParams {
    vec4 color;       
    float pointSize;  
    float intensity;
    int Sample;
};

layout(std430, binding = 1) uniform buffer PointBuffer {
    float data[];
};


layout(rgba8, binding = 2) uniform  image2D outputTexture;

void main() {
    ivec2 pixelCoord = ivec2(gl_GlobalInvocationID.xy);
    ivec2 textureSize = imageSize(outputTexture);
    
  
    vec4 finalColor = vec4(0.0, 0.0, 0.0, 1.0);
    
  
    for (int i = 0; i < data.length(); i += 2) {
        
        float x = data[i];
        float y = data[i + 1];
        
        
        vec2 pointPos = vec2(x, y) * 0.5 + 0.5;
        ivec2 pointPixel = ivec2(pointPos * vec2(textureSize));
        
       
        float dist = distance(vec2(pixelCoord), vec2(pointPixel));
        
        
        if (dist < pointSize) {
            
            float alpha = 1.0 - smoothstep(0.0, pointSize, dist);
            
            finalColor.rgb = mix(finalColor.rgb, color.rgb, alpha * intensity);
        }
    }
    
    
    imageStore(outputTexture, pixelCoord, finalColor);
}